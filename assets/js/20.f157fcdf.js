(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{341:function(t,s,e){"use strict";e.r(s);var a=e(4),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),e("ul",[e("li",[t._v("Git\n"),e("ul",[e("li",[t._v("开源")]),t._v(" "),e("li",[t._v("免费")]),t._v(" "),e("li",[t._v("分布式版本控制系统（DVCS）")]),t._v(" "),e("li",[t._v("基于内容寻址的存储系统（区分基于文件）")])])]),t._v(" "),e("li",[t._v("历史\n"),e("ul",[e("li",[t._v("linux 开发\n"),e("ul",[e("li",[t._v("1991 - 2002 几乎无版本控制")]),t._v(" "),e("li",[t._v("2002 - 2005 BitKeeper 直至停止授权使用")]),t._v(" "),e("li",[t._v("2005 - 至今 Git")])])])])]),t._v(" "),e("li",[t._v("优势\n"),e("ul",[e("li",[t._v("快")]),t._v(" "),e("li",[t._v("完全的分布式")]),t._v(" "),e("li",[t._v("轻量级的分支操作")]),t._v(" "),e("li",[t._v("成为标准")]),t._v(" "),e("li",[t._v("社区成熟活跃")])])])]),t._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/book/en/v2/Getting-Started-Installing-Git",target:"_blank",rel:"noopener noreferrer"}},[t._v("安装"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://gitforwindows.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Windows"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("Mac\n"),e("ul",[e("li",[e("code",[t._v("brew install git")])])])]),t._v(" "),e("li",[t._v("Ubuntu\n"),e("ul",[e("li",[e("code",[t._v("apt-get install git")])])])])]),t._v(" "),e("h2",{attrs:{id:"git-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-命令"}},[t._v("#")]),t._v(" Git 命令")]),t._v(" "),e("h3",{attrs:{id:"help"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#help"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-help",target:"_blank",rel:"noopener noreferrer"}},[t._v("help"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("查看文档")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git help <command>\ngit <command> -h\ngit <command> --help\nman git-<command>\n")])])]),e("h3",{attrs:{id:"config"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-config",target:"_blank",rel:"noopener noreferrer"}},[t._v("config"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("配置 Git")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git config\n")])])]),e("p",[t._v("全局用户配置")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\ngit config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx@xxx.com"')]),t._v("\n")])])]),e("p",[t._v("配置级别")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("--local")]),t._v(" "),e("ul",[e("li",[t._v("默认 高优先级")]),t._v(" "),e("li",[t._v("只影响本仓库")]),t._v(" "),e("li",[t._v(".git/config")])])]),t._v(" "),e("li",[e("code",[t._v("--global")]),t._v(" "),e("ul",[e("li",[t._v("中优先级")]),t._v(" "),e("li",[t._v("影响当前用户的仓库")]),t._v(" "),e("li",[t._v("~/.gitconfig")])])]),t._v(" "),e("li",[e("code",[t._v("--system")]),t._v(" "),e("ul",[e("li",[t._v("低优先级")]),t._v(" "),e("li",[t._v("影响全系统的仓库")]),t._v(" "),e("li",[t._v("/etc/gitconfig")])])])]),t._v(" "),e("h3",{attrs:{id:"init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-init",target:"_blank",rel:"noopener noreferrer"}},[t._v("init"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("初始化仓库")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git init [path]\ngit init [path] --bare\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化前查看状态")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提示不是一个 Git 仓库")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nfatal: not a git repository (or any of the parent directories): .git\n\nxxx@xxx MINGW64 ~/Desktop/git-test\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\nInitialized empty Git repository in C:/Users/86157/Desktop/git-test/.git/\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提示 在 master 分支 ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提示没有提交 可使用 git add 命令以跟踪")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\n\nNo commits yet\n\nnothing to commit (create/copy files and use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" to track)\n")])])]),e("h3",{attrs:{id:"status"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#status"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-status",target:"_blank",rel:"noopener noreferrer"}},[t._v("status"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("查看状态")]),t._v(" "),e("ul",[e("li",[t._v("未跟踪 <-> 跟踪\n"),e("ul",[e("li",[t._v("内容状态\n"),e("ul",[e("li",[t._v("工作目录")]),t._v(" "),e("li",[t._v("暂存区")]),t._v(" "),e("li",[t._v("提交区")])])]),t._v(" "),e("li",[t._v("文件状态\n"),e("ul",[e("li",[t._v("未跟踪")]),t._v(" "),e("li",[t._v("已跟踪")])])])])]),t._v(" "),e("li",[t._v("工作目录 <-> 暂存区")]),t._v(" "),e("li",[t._v("暂存区 <-> 最新提交")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git status\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建文件")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n$ touch README.md\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示未跟踪文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可使用 git add 跟踪")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\n\nNo commits yet\n\nUntracked files:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to include in what will be committed)\n\n        README.md\n\nnothing added to commit but untracked files present (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" to track)\n")])])]),e("h3",{attrs:{id:"add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-add",target:"_blank",rel:"noopener noreferrer"}},[t._v("add"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("添加文件到暂存区，文件成已跟踪状态")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add\n")])])]),e("h4",{attrs:{id:"添加"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加"}},[t._v("#")]),t._v(" 添加")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add README.md")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\n\nNo commits yet\n\nChanges to be committed:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rm --cached <file>..."')]),t._v(" to unstage)\n\n        new file:   README.md\n")])])]),e("h4",{attrs:{id:"批量添加"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#批量添加"}},[t._v("#")]),t._v(" 批量添加")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n$ touch package.json\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\n\nNo commits yet\n\nChanges to be committed:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rm --cached <file>..."')]),t._v(" to unstage)\n\n        new file:   README.md\n        new file:   package.json\n")])])]),e("h3",{attrs:{id:"忽略文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("忽略文件"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("1.gitignore")]),t._v(" "),e("ul",[e("li",[t._v("添加时忽略匹配文件")]),t._v(" "),e("li",[t._v("仅作用于"),e("strong",[t._v("未跟踪")]),t._v("的文件")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加 .gitignore 前")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\n\nNo commits yet\n\nChanges to be committed:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rm --cached <file>..."')]),t._v(" to unstage)\n\n        new file:   README.md\n        new file:   package.json\n\nUntracked files:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to include in what will be committed)\n\n        .history/\n        .vscode/\n")])])]),e("div",{staticClass:"language- extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# .gitignore\n\n# VSCode 文件\n.vscode\n# VSCode 插件 Local History 文件\n.history\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .gitignore")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加 .gitignore 后")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\n\nNo commits yet\n\nChanges to be committed:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rm --cached <file>..."')]),t._v(" to unstage)\n\n        new file:   .gitignore\n        new file:   README.md\n        new file:   package.json\n\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitignore 模板 - github"),e("OutboundLink")],1)])])]),t._v(" "),e("h3",{attrs:{id:"rm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rm"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-rm",target:"_blank",rel:"noopener noreferrer"}},[t._v("rm"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("从暂存区删除文件")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅从暂存区删除")]),t._v("\ngit rm --cached\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从暂存区与工作目录删除")]),t._v("\ngit rm\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除所有被跟踪但是在工作目录被删除的文件")]),t._v("\ngit rm $(git ls-files --deleted)\n")])])]),e("h3",{attrs:{id:"工作目录与暂存区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作目录与暂存区"}},[t._v("#")]),t._v(" 工作目录与暂存区")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 README.md 文件内容")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 工作目录与暂存区同时出现说明根据内容寻址")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\n\nNo commits yet\n\nChanges to be committed:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rm --cached <file>..."')]),t._v(" to unstage)\n\n        new file:   .gitignore\n        new file:   README.md\n        new file:   package.json\n\nChanges not staged for commit:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes in working directory)\n\n        modified:   README.md\n")])])]),e("h3",{attrs:{id:"commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-commit",target:"_blank",rel:"noopener noreferrer"}},[t._v("commit"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("根据暂存区内容创建一个提交记录")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git commit\n")])])]),e("h4",{attrs:{id:"提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交"}},[t._v("#")]),t._v(" 提交")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交 -m '注释'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 工作目录内容还存在")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial commit'")]),t._v("\n[master (root-commit) 4af17bc] initial commit\n 3 files changed, 4 insertions(+)\n create mode 100644 .gitignore\n create mode 100644 README.md\n create mode 100644 package.json\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nChanges not staged for commit:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes in working directory)\n\n        modified:   README.md\n\nno changes added to commit (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),t._v(")\n")])])]),e("h4",{attrs:{id:"直接提交工作目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#直接提交工作目录"}},[t._v("#")]),t._v(" 直接提交工作目录")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'full commit'")]),t._v("\n[master f0e8eba] full commit\n 1 file changed, 1 insertion(+)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nnothing to commit, working tree clean\n")])])]),e("h3",{attrs:{id:"log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-log",target:"_blank",rel:"noopener noreferrer"}},[t._v("log"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("查看历史提交信息")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git log\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SHA-1 编码的 HASH 标志符")]),t._v("\ncommit f0e8eba9432bf30713ac443ab7a6df336629867b (HEAD -> master)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git-config 配置的提交者信息")]),t._v("\nAuthor: xxx <xxx@xxx.com>\nDate:   Wed Jan 29 11:25:07 2020 +0800\n\n    full commit\n\n"),e("span",{pre:!0,attrs:{class:"token commit_sha1"}},[t._v("commit 4af17bc8360028dd4c68fa80e420ae8c21a683f3")]),t._v("\nAuthor: xxx <xxx@xxx.com>\nDate:   Wed Jan 29 11:19:01 2020 +0800\n\n    initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 简化日志")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")])]),t._v("\nf0e8eba (HEAD -> master) full commit\n4af17bc initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 美化日志")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --pretty")]),t._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'")]),t._v(" --abbrev-commit\n* f0e8eba - (HEAD -> master) full commit (13 minutes ago) <xxx>\n* 4af17bc - initial commit (19 minutes ago) <xxx>\n")])])]),e("h3",{attrs:{id:"aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aliases"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases",target:"_blank",rel:"noopener noreferrer"}},[t._v("aliases"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("配置别名")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git config alias.shortname <fullcommand>\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git config"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --global")]),t._v(" alias.log-graph ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log-graph")]),t._v("\n* f0e8eba - (HEAD -> master) full commit (6 hours ago) <xxx>\n* 4af17bc - initial commit (6 hours ago) <xxx>\n")])])]),e("h3",{attrs:{id:"diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-diff",target:"_blank",rel:"noopener noreferrer"}},[t._v("diff"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("显示不同版本差异")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 工作目录与暂存区的差异")]),t._v("\ngit diff\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂存区与某次提交差异，默认为 HEAD")]),t._v("\ngit diff -cached [<reference>]\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 工作目录与某次提交的差异")]),t._v("\ngit diff <reference>\n")])])]),e("h3",{attrs:{id:"撤销工作目录修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销工作目录修改"}},[t._v("#")]),t._v(" 撤销工作目录修改")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将文件内容从暂存区复制到工作目录")]),t._v("\ngit checkout --<file>\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 README.md 文件内容")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nChanges not staged for commit:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes in working directory)\n\n        modified:   README.md\n\nno changes added to commit (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),t._v(")\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout -- README.md")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nnothing to commit, working tree clean\n")])])]),e("h3",{attrs:{id:"撤销暂存区内容，工作目录内容存在"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销暂存区内容，工作目录内容存在"}},[t._v("#")]),t._v(" 撤销暂存区内容，工作目录内容存在")]),t._v(" "),e("p",[t._v("将文件内容从上次提交复制到暂存区")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git reset HEAD <file>\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 README.md 文件内容")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add README.md")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nChanges to be committed:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git reset HEAD <file>..."')]),t._v(" to unstage)\n\n        modified:   README.md\n\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset HEAD README.md")]),t._v("\nUnstaged changes after reset:\nM       README.md\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nChanges not staged for commit:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes in working directory)\n\n        modified:   README.md\n\nno changes added to commit (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),t._v(")\n")])])]),e("h3",{attrs:{id:"撤销暂存区、工作目录内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销暂存区、工作目录内容"}},[t._v("#")]),t._v(" 撤销暂存区、工作目录内容")]),t._v(" "),e("p",[t._v("将文件内容从上次提交复制到暂存区、工作目录")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout HEAD -- <file>\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 README.md 文件内容")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add README.md")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nChanges to be committed:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git reset HEAD <file>..."')]),t._v(" to unstage)\n\n        modified:   README.md\n\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout HEAD -- README.md")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nnothing to commit, working tree clean\n")])])]),e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("未跟踪     已跟踪\n   │ git add │\n   ├────────>┼\n   │ git rm  │\n   ├<────────┼\n\n工作目录                  暂存区              提交区\n   │ git add                │ git commit       │\n   ├───────────────────────>┼─────────────────>┤\n   │ git commit -a                             │\n   ├──────────────────────────────────────────>┤\n   │ git checkout -- <file> │ git reset <file> │\n   ├<───────────────────────┼<─────────────────┤\n   │ git checkout HEAD -- <file>               │\n   ├<──────────────────────────────────────────┤\n")])])]),e("h3",{attrs:{id:"branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#branch"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-branch",target:"_blank",rel:"noopener noreferrer"}},[t._v("branch"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("分支操作")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建分支")]),t._v("\ngit branch <branchName>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除分支")]),t._v("\ngit branch -d <branchName>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看分支信息")]),t._v("\ngit branch -v\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建分支")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch next")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 master 分支信息")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n$ cat .git/refs/heads/master\nf0e8eba9432bf30713ac443ab7a6df336629867b\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 README.md 文件内容")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n$  git commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'branch test'")]),t._v("\n[master c873cf5] branch test\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看分支信息")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -v")])]),t._v("\n* master c873cf5 branch test\n  next   f0e8eba full commit\n")])])]),e("h3",{attrs:{id:"checkout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#checkout"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-checkout",target:"_blank",rel:"noopener noreferrer"}},[t._v("checkout"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("通过移动 HEAD 检出版本"),e("br"),t._v("\n可用于分支切换")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换分支")]),t._v("\ngit checkout <branchName>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建并切换分支")]),t._v("\ngit checkout -b <branchName>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移动到提交引用")]),t._v("\ngit checkout <reference>\n")])])]),e("h4",{attrs:{id:"切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[t._v("#")]),t._v(" 切换分支")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout next")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'next'")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (next)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -v")])]),t._v("\n  master c873cf5 branch test\n* next   f0e8eba full commit\n")])])]),e("h4",{attrs:{id:"提交-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交-2"}},[t._v("#")]),t._v(" 提交")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 README.md 文件内容")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (next)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'next branch test'")]),t._v("\n[next dbec47f] next branch test\n 1 file changed, 2 insertions(+), 1 deletion(-)\n")])])]),e("h4",{attrs:{id:"切换到上一个分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换到上一个分支"}},[t._v("#")]),t._v(" 切换到上一个分支")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (next)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout -")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n")])])]),e("h4",{attrs:{id:"创建并切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换分支"}},[t._v("#")]),t._v(" 创建并切换分支")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" issue-26")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'issue-26'")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (issue-26)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -v")])]),t._v("\n* issue-26 c873cf5 branch test\n  master   c873cf5 branch test\n  next     dbec47f next branch test\n")])])]),e("h4",{attrs:{id:"移动到提交引用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移动到提交引用"}},[t._v("#")]),t._v(" 移动到提交引用")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test ((dbec47f...))\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout f0e8eba")]),t._v("\nPrevious HEAD position was dbec47f next branch test\nHEAD is now at f0e8eba full commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 游离状态（detached head）不要进行编辑操作")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (issue-26)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout f0e8eba")]),t._v("\nNote: checking out "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f0e8eba'")]),t._v(".\n\nYou are in "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'detached HEAD'")]),t._v(" state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b <new-branch-name>\n\nHEAD is now at f0e8eba full commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到 master 分支")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test ((f0e8eba...))\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nPrevious HEAD position was f0e8eba full commit\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n")])])]),e("h3",{attrs:{id:"reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-reset",target:"_blank",rel:"noopener noreferrer"}},[t._v("reset"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("当前分支回退到某个版本")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 复制当前内容到暂存区")]),t._v("\ngit reset --mixed <commit>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 复制当前内容到暂存区、工作目录")]),t._v("\ngit reset --soft <commit>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不复制")]),t._v("\ngit reset --hard <commit>\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 README.md 文件内容")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reset test'")]),t._v("\n[master b063214] reset test\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log-graph")]),t._v("\n* b063214 - (HEAD -> master) reset test (22 seconds ago) <xxx>\n* c873cf5 - (issue-26) branch test (5 weeks ago) <xxx>\n* f0e8eba - full commit (5 weeks ago) <xxx>\n* 4af17bc - initial commit (5 weeks ago) <xxx>\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --mixed")]),t._v(" c873cf5")]),t._v("\nUnstaged changes after reset:\nM       README.md\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log-graph")]),t._v("\n* c873cf5 - (HEAD -> master, issue-26) branch test (5 weeks ago) <xxx>\n* f0e8eba - full commit (5 weeks ago) <xxx>\n* 4af17bc - initial commit (5 weeks ago) <xxx>\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nChanges not staged for commit:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes in working directory)\n\n        modified:   README.md\n\nno changes added to commit (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),t._v(")\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看操作记录")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reflog")]),t._v("\nc873cf5 (HEAD -> master, issue-26) HEAD@{0}: reset: moving to c873cf5\nb063214 HEAD@{1}: commit: reset test\nc873cf5 (HEAD -> master, issue-26) HEAD@{2}: reset: moving to HEAD~\nbaf8bdf HEAD@{3}: commit: reset test\nc873cf5 (HEAD -> master, issue-26) HEAD@{4}: reset: moving to c873cf5\ndfade7b HEAD@{5}: reset: moving to dfade7b\ndfade7b HEAD@{6}: reset: moving to dfade7b\ndfade7b HEAD@{7}: commit: reset test\nc873cf5 (HEAD -> master, issue-26) HEAD@{8}: checkout: moving from f0e8eba9432bf30713ac443ab7a6df336629867b to master\nf0e8eba HEAD@{9}: checkout: moving from issue-26 to f0e8eba\nc873cf5 (HEAD -> master, issue-26) HEAD@{10}: checkout: moving from f0e8eba9432bf30713ac443ab7a6df336629867b to issue-26\nf0e8eba HEAD@{11}: checkout: moving from master to f0e8eba\nc873cf5 (HEAD -> master, issue-26) HEAD@{12}: checkout: moving from f0e8eba9432bf30713ac443ab7a6df336629867b to master\nf0e8eba HEAD@{13}: checkout: moving from dbec47f9101e16efa2f9fec8c4598d3716564a21 to f0e8eba\ndbec47f (next) HEAD@{14}: checkout: moving from issue-26 to dbec47f\nc873cf5 (HEAD -> master, issue-26) HEAD@{15}: checkout: moving from master to issue-26\nc873cf5 (HEAD -> master, issue-26) HEAD@{16}: checkout: moving from issue-26 to master\nc873cf5 (HEAD -> master, issue-26) HEAD@{17}: checkout: moving from master to issue-26\nc873cf5 (HEAD -> master, issue-26) HEAD@{18}: checkout: moving from next to master\ndbec47f (next) HEAD@{19}: commit: next branch test\nf0e8eba HEAD@{20}: checkout: moving from master to next\nc873cf5 (HEAD -> master, issue-26) HEAD@{21}: commit: branch test\nf0e8eba HEAD@{22}: commit: full commit\n4af17bc HEAD@{23}: commit (initial): initial commit\n")])])]),e("p",[t._v("捷径")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("A^")]),t._v(" A 的父提交")]),t._v(" "),e("li",[e("code",[t._v("A~n")]),t._v(" A 前 n 次提交")])]),t._v(" "),e("h3",{attrs:{id:"reset-checkout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-checkout"}},[t._v("#")]),t._v(" reset checkout")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("范例")]),t._v(" "),e("th",[t._v("移动（HEAD/branch）")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("git reset <commit>")])]),t._v(" "),e("td",[e("code",[t._v("git reset HEAD^ --soft")])]),t._v(" "),e("td",[t._v("是/是")]),t._v(" "),e("td",[t._v("完全退回到某提交")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("git reset <file>")])]),t._v(" "),e("td",[e("code",[t._v("git reset README.md")])]),t._v(" "),e("td",[t._v("否/否")]),t._v(" "),e("td",[t._v("恢复暂存区到某提交状态")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("git checkout <commit>")])]),t._v(" "),e("td",[e("code",[t._v("git checkout master")])]),t._v(" "),e("td",[t._v("是/否")]),t._v(" "),e("td",[t._v("移动当前指针 HEAD 到某提交")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("git checkout <file>")])]),t._v(" "),e("td",[e("code",[t._v("git checkout -- README.md")])]),t._v(" "),e("td",[t._v("否/否")]),t._v(" "),e("td",[t._v("恢复工作目录到某状态")])])])]),t._v(" "),e("h3",{attrs:{id:"stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stash"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-stash",target:"_blank",rel:"noopener noreferrer"}},[t._v("stash"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("保存目前的工作目录和暂存区状态，返回到干净的工作目录")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存内容")]),t._v("\ngit stash save <message>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看保存记录")]),t._v("\ngit stash list\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复保存内容到工作目录")]),t._v("\ngit stash apply <stash>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除保存记录")]),t._v("\ngit stash drop <stash>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# apply + drop")]),t._v("\ngit stash pop\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 README.md 文件内容")]),t._v("\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add README.md")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 README.md 文件内容")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nChanges to be committed:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git reset HEAD <file>..."')]),t._v(" to unstage)\n\n        modified:   README.md\n\nChanges not staged for commit:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes in working directory)\n\n        modified:   README.md\n\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash save ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stash save test'")]),t._v("\nSaved working directory and index state On master: stash save test\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nnothing to commit, working tree clean\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash list")]),t._v("\nstash@{0}: On master: stash save test\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash apply stash@{0}")]),t._v("\nOn branch master\nChanges not staged for commit:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes in working directory)\n\n        modified:   README.md\n\nno changes added to commit (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),t._v(")\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash drop stash@{0}")]),t._v("\nDropped stash@{0} (7f4562e37e59b7540502288ed2f9038bd046bdb8)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash list")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash save ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stash pop test'")]),t._v("\nSaved working directory and index state On master: stash pop test\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nnothing to commit, working tree clean\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash list")]),t._v("\nstash@{0}: On master: stash pop test\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash pop")]),t._v("\nOn branch master\nChanges not staged for commit:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes in working directory)\n\n        modified:   README.md\n\nno changes added to commit (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),t._v(")\nDropped refs/stash@{0} (2062bd6f2622c2dc4a2f0d35d22c040de6e44b7e)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash list")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清除修改的内容")]),t._v("\n")])])]),e("h3",{attrs:{id:"merge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#merge"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-merge",target:"_blank",rel:"noopener noreferrer"}},[t._v("merge"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("合并分支")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge <branch> <branch>\n")])])]),e("p",[t._v("合并分支")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" merge")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 merge 分支 README.md 文件内容")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (merge)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge test commit'")]),t._v("\n[merge 1a34406] merge test commit\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (merge)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge merge")]),t._v("\nUpdating f0e8eba..1a34406\nFast-forward\n README.md | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n \nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git cat-file"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -p")]),t._v(" HEAD")]),t._v("\ntree 85175d63eb4a63b923674641c279e0fa32a5abe6\nparent f0e8eba9432bf30713ac443ab7a6df336629867b\nauthor xxx <br.github@outlook.com> 1583305929 +0800\ncommitter xxx <br.github@outlook.com> 1583305929 +0800\n\nmerge test commit\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -D")]),t._v(" merge")]),t._v("\nDeleted branch merge (was 1a34406).\n")])])]),e("p",[t._v("合并分支处理冲突")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" merge-conflict")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge-conflict'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 merge-conflict 分支 README.md 文件内容")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (merge-conflict)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge conflict test commit'")]),t._v("\n[merge-conflict ebc0133] merge conflict test commit\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (merge-conflict)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 master 分支 README.md 文件内容")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge conflict test master commit'")]),t._v("\n[master 10937e0] merge conflict test master commit\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge merge-conflict")]),t._v("\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nAutomatic merge failed; fix conflicts and then commit the result.\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master|MERGING)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nYou have unmerged paths.\n  (fix conflicts and run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit"')]),t._v(")\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git merge --abort"')]),t._v(" to abort the merge)\n\nUnmerged paths:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to mark resolution)\n\n        both modified:   README.md\n\nno changes added to commit (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),t._v(")\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master|MERGING)\n$ cat README.md\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Git Test")]),t._v("\ngit merge test\n<<<<<<< HEAD\ngit merge conflict test 1\n=======\ngit merge conflict test 2\n>>>>>>> merge-conflict\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 master 分支 README.md 文件内容解决冲突")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master|MERGING)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resolve merge conflict test'")]),t._v("\n[master 5685637] resolve merge conflict test\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nnothing to commit, working tree clean\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -D")]),t._v(" merge-conflict")]),t._v("\nDeleted branch merge-conflict (was ebc0133).\n")])])]),e("p",[t._v("非 fast-forward 方式合并分支")]),t._v(" "),e("p",[t._v("默认 fast-forward 方式，非 fast-forward 方式合并记录合并信息")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" merge-no-ff")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge-no-ff'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 merge-no-ff 分支 README.md 文件内容")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (merge-no-ff)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge no ff commit'")]),t._v("\n[merge-no-ff cb9e63c] merge no ff commit\n 1 file changed, 1 insertion(+), 4 deletions(-)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (merge-no-ff)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-ff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge no ff test'")]),t._v(" merge-no-ff\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recursive'")]),t._v(" strategy.\n README.md | 5 +----\n 1 file changed, 1 insertion(+), 4 deletions(-)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -D")]),t._v(" merge-no-ff")]),t._v("\nDeleted branch merge-no-ff (was cb9e63c).\n\n")])])]),e("h3",{attrs:{id:"rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-rebase",target:"_blank",rel:"noopener noreferrer"}},[t._v("rebase"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("剪切提交（重引）历史基线，变基"),e("br"),t._v("\n勿在公用分支使用 rebase")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全部重引")]),t._v("\ngit rebase\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部分重引")]),t._v("\ngit rebase --onto\n")])])]),e("p",[t._v("全部重引")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" rebase")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rebase'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 rebase 分支 README.md 文件内容")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (rebase)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rebase test 1'")]),t._v("\n[rebase 2adb47c] rebase test 1\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改 rebase 分支 README.md 文件内容")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (rebase)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rebase test 2'")]),t._v("\n[rebase eb3cfc0] rebase test 2\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (rebase)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase rebase")]),t._v("\nFirst, rewinding head to replay your work on top of it...\nFast-forwarded master to rebase.\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log-graph")]),t._v("\n* eb3cfc0 - (HEAD -> master, rebase) rebase test 2 (24 hours ago) <xxx>\n* 2adb47c - rebase test 1 (24 hours ago) <xxx>\n*   6dcedf9 - merge no ff test (25 hours ago) <xxx>\n|\\\n| * cb9e63c - merge no ff commit (25 hours ago) <xxx>\n|/\n*   5685637 - resolve merge conflict test (25 hours ago) <xxx>\n|\\\n| * ebc0133 - merge conflict test commit (26 hours ago) <xxx>\n* | 10937e0 - merge conflict test master commit (26 hours ago) <xxx>\n|/\n* 1a34406 - merge test commit (26 hours ago) <xxx>\n* f0e8eba - full commit (5 weeks ago) <xxx>\n* 4af17bc - initial commit (5 weeks ago) <xxx>\n")])])]),e("p",[t._v("练习失败")]),t._v(" "),e("h3",{attrs:{id:"tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-tag",target:"_blank",rel:"noopener noreferrer"}},[t._v("tag"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("给提交设置别名")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git tag <tag> <commit>\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (rebase)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tag test'")]),t._v("\n[master 7222038] tag test\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git tag v0.1 7222038")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log-graph")]),t._v("\n* 7222038 - (HEAD -> master, tag: v0.1) tag test (78 seconds ago) <xxx>\n* eb3cfc0 - rebase test 2 (25 hours ago) <xxx>\n* 2adb47c - rebase test 1 (25 hours ago) <xxx>\n*   6dcedf9 - merge no ff test (25 hours ago) <xxx>\n|\\\n| * cb9e63c - merge no ff commit (25 hours ago) <xxx>\n|/\n*   5685637 - resolve merge conflict test (26 hours ago) <xxx>\n|\\\n| * ebc0133 - merge conflict test commit (26 hours ago) <xxx>\n* | 10937e0 - merge conflict test master commit (26 hours ago) <xxx>\n|/\n* 1a34406 - merge test commit (27 hours ago) <xxx>\n* f0e8eba - full commit (5 weeks ago) <xxx>\n* 4af17bc - initial commit (5 weeks ago) <xxx>\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout v0.1")]),t._v("\nNote: checking out "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v0.1'")]),t._v(".\n\nYou are in "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'detached HEAD'")]),t._v(" state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b <new-branch-name>\n\nHEAD is now at 7222038 tag test\n\nxxx@xxx MINGW64 ~/Desktop/git-test ((v0.1))\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout 7222038")]),t._v("\nHEAD is now at 7222038 tag test\n")])])]),e("h3",{attrs:{id:"初始化本地远程服务器-git-init-bare"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化本地远程服务器-git-init-bare"}},[t._v("#")]),t._v(" 初始化本地远程服务器 "),e("a",{attrs:{href:"https://git-scm.com/docs/git-init",target:"_blank",rel:"noopener noreferrer"}},[t._v("git init --bare"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("初始化本地远程服务器")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git init ~/git-server --bare\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx-7560 MINGW64 ~/Desktop/git-test ((v0.1))\n$ cd ..\n\nxxx@xxx-7560 MINGW64 ~/Desktop\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init git-server-test"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --bare")])]),t._v("\nInitialized empty Git repository in C:/Users/86157/Desktop/git-server-test/\n")])])]),e("h3",{attrs:{id:"push"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-push",target:"_blank",rel:"noopener noreferrer"}},[t._v("push"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("推送到远程")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git push <remote> <branch>\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push ../git-server-test master")]),t._v("\nEnumerating objects: 32, done.\nCounting objects: 100% (32/32), done.\nDelta compression using up to 4 threads\nCompressing objects: 100% (25/25), done.\nWriting objects: 100% (32/32), 3.15 KiB | 322.00 KiB/s, done.\nTotal 32 (delta 3), reused 0 (delta 0)\nTo ../git-server-test\n * [new branch]      master -> master\n")])])]),e("h3",{attrs:{id:"remote"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remote"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-remote",target:"_blank",rel:"noopener noreferrer"}},[t._v("remote"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("远程仓库操作")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加远程仓库别名")]),t._v("\ngit remote add <alias> <repository>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程仓库信息")]),t._v("\ngit remote -v\n")])])]),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("xxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add origin ../git-server-test")]),t._v("\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -v")])]),t._v("\norigin  ../git-server-test (fetch)\norigin  ../git-server-test (push)\n\nxxx@xxx MINGW64 ~/Desktop/git-test (master)\n$ cat .git/config\n[core]\n        repositoryformatversion = 0\n        filemode = false\n        bare = false\n        logallrefupdates = true\n        symlinks = false\n        ignorecase = true\n[remote "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"origin"')]),t._v("]\n        url = ../git-server-test\n        fetch = +refs/heads/*:refs/remotes/origin/*\n")])])]),e("h3",{attrs:{id:"fetch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-fetch",target:"_blank",rel:"noopener noreferrer"}},[t._v("fetch"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("获取远程仓库提交")]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取远程仓库提交")]),t._v("\ngit fetch <remote> <branch>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并分支")]),t._v("\ngit merge <remote>/<branch>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送到远程")]),t._v("\ngit push <remote> <branch>\n")])])]),e("h3",{attrs:{id:"pull"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pull"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-pull",target:"_blank",rel:"noopener noreferrer"}},[t._v("pull"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("拉取远程仓库提交"),e("br"),t._v(" "),e("code",[t._v("pull")]),t._v(" = "),e("code",[t._v("fetch")]),t._v(" + "),e("code",[t._v("merge")])]),t._v(" "),e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git pull <remote> <branch>\n")])])]),e("h3",{attrs:{id:"clone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://git-scm.com/docs/git-clone",target:"_blank",rel:"noopener noreferrer"}},[t._v("clone"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("克隆远程仓库为本地仓库"),e("br"),t._v(" "),e("code",[t._v("clone")]),t._v(" = "),e("code",[t._v("init")]),t._v(" + "),e("code",[t._v("remote")]),t._v(" + "),e("code",[t._v("pull")])]),t._v(" "),e("h2",{attrs:{id:"延伸"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#延伸"}},[t._v("#")]),t._v(" 延伸")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Pro Git》"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);